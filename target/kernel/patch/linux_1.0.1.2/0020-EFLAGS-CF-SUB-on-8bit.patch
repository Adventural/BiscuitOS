From afaf3810100622339588a612a5de9913a0cab776 Mon Sep 17 00:00:00 2001
From: BuddyZhang1 <buddy.zhang@aliyun.com>
Date: Tue, 14 Aug 2018 18:55:55 +0800
Subject: [PATCH 20/34] EFLAGS -- CF: SUB on 8bit

---
 .../demo/mmu/storage/register/EFLAGS/Kconfig  |  9 +++++--
 .../demo/mmu/storage/register/EFLAGS/eflags.c | 26 +++++++++++++++++++
 2 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/tools/demo/mmu/storage/register/EFLAGS/Kconfig b/tools/demo/mmu/storage/register/EFLAGS/Kconfig
index 4607fa5..dc32a12 100644
--- a/tools/demo/mmu/storage/register/EFLAGS/Kconfig
+++ b/tools/demo/mmu/storage/register/EFLAGS/Kconfig
@@ -17,7 +17,7 @@ config DEBUG_EFLAGS_LAHF
 	  Obtain EFLAGS register via "LAHF" instrcution.
 
 config DEBUG_EFLAGS_SAHF
-	bool "SAHF    Store AH into Flags"
+	bool "SAHF    Store AH into EFLAGS register"
 	help
 	  Store AH into EFLAGS via "SAHF" instruction.
 
@@ -71,7 +71,7 @@ config DEBUG_CF_DAA
 config DEBUG_CF_DAS
 	bool "DAS     Decimal adjust AL after subtraction"
 	help
-	  Debug DAS instruction for borrow on.
+	  Debug DAS instruction for borrow from.
 
 config DEBUG_CF_BT
 	bool "BT      Test bit"
@@ -108,6 +108,11 @@ config DEBUG_CF_MUL
 	help
 	  Unsigned multiply.
 
+config DEBUG_CF_SUB
+	bool "SUB     Subtract"
+	help
+	  Subtraction.
+
 endif # DEBUG_EFLAGS_CF
 
 endif
diff --git a/tools/demo/mmu/storage/register/EFLAGS/eflags.c b/tools/demo/mmu/storage/register/EFLAGS/eflags.c
index ae81707..3b917f7 100644
--- a/tools/demo/mmu/storage/register/EFLAGS/eflags.c
+++ b/tools/demo/mmu/storage/register/EFLAGS/eflags.c
@@ -899,6 +899,32 @@ static __unused int eflags_CF(void)
                                 ECX, EBX, EDX, EAX);
 #endif
 
+#ifdef CONFIG_DEBUG_CF_SUB
+    CX = 0x1;
+    DX = 0x2;
+    __asm__ ("mov %2, %%al\n\r"
+             "mov %3, %%bl\n\r"
+             "sub %%bl, %%al\n\r"
+             "jc CF_SET15\n\r"
+             "jnc CF_CLEAR15\n\r"
+    "CF_SET15:\n\r"
+             "mov $1, %%bx\n\r"
+             "jmp out15\n\r"
+  "CF_CLEAR15:\n\r"
+             "mov $0, %%bx\n\r"
+       "out15:\n\r"
+             "mov %%bx, %0\n\r"
+             "mov %%ax, %1"
+             : "=m" (CF), "=m" (AX)
+             : "m" (CX), "m" (DX));
+    if (CF)
+        printk("SUB 8: CF has set on %#x - %#x = %#x\n", CX, DX, 
+                                            ~(AX & 0xFF) + 1);
+    else
+        printk("SUB 8: CF has cleared on %#x - %#x = %#x\n", CX, DX, 
+                                            AX & 0xFF);
+#endif
+
     return 0;
 }
 
-- 
2.17.1

